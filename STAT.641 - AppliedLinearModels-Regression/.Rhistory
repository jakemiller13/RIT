ggplot(data = mpg)
?mtcars
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = class, y = drv))
install.packages("ISLR")
ISLR::Auto
x <- c(1, 3, 2, 5)
x
x = c(1, 6, 2)
x
y = c(1, 4, 3)
y
length(x)
length(y)
x + y
ls()
rm(x, y)
ls()
rm()
ls
ls()
rm(my_div, my_seq, my_sqrt, old.dir, z)
ls()
?matrix
x = matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
x^2
x**2
rnorm(10)
ls()
x = rnorm(50)
y = x + rnorm(50, mean = 50, sd = 0.1)
y
x
cor(x, y)
set.seed(3)
y = rnorm(100)
mean(y)
var(y)
sd(y)
sqrt(var(y))
?plot
x = rnorm(100)
y = rnorm(100)
plot(x, y)
plot(x, y, xlab = 'this is the x-axis', ylab = 'this is the y-axis', main = "plot of x v y")
pdf('Figure.pdf')
plot(x, y, col = 'green')
dev.off()
x = seq(1, 10)
x
x = 1:10
x
x = seq(-pi, pi, length = 50)
x
x = seq(pi, -pi, length = 50)
x
?contour
y = x
f = outer(x, y, function(x,y)cos(y)/(1 + x^2))
f
contour(x, y, f)
x = seq(-pi, pi, length = 50)
y = x
f = outer(x, y, function(x,y)cos(y)/(1 + x^2))
f
contour(x, y, f)
contour(x, y, f, nlevels = 45, add=T)
fa = (f - t(f))/2
contour(x, y, fa, nlevels = 15)
image(x, y, fa)
persp(x, y, fa)
persp(x, y, fa, theta = 30)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30, phi = 70)
persp(x, y, fa, theta = 30, phi = 40)
A = matrix(1:16, 4, 4)
A
A[2, 3]
A[c(1, 3), c(2, 4)]
A[c(1: 3), c(2: 4)]
A[1:2, ]
A[,1:2]
A[1,]
A[1]
A[2]
A[,1]
A
A[-c(1, 3), ]
dim(A)
ISRL
islr
ISLR
library("ISLR")
library("islr")
install.packages("ISLR")
library("ISLR")
Auto = ISLR::Auto
Auto
fix(Auto)
Auto.data
dim(Auto)
names(Auto)
Auto$cylinders
Auto.cylinders
plot(Auto$cylinders, Auto$mpg)
cylinders = as.factor(Auto$cylinders)
cylinders
attach(Auto)
rm(cylinders)
attach(Auto)
cylinders
acceleration
cylinders = as.factor(cylinders)
plot(cylinders, mpg)
plot(cylinders, mpg, col = 'red')
plot(cylinders, mpg, col = 'red', varwidth = T)
plot(cylinders, mpg, col = 'red', varwidth = T, horizontal = T)
plot(cylinders, mpg, col = 'red', varwidth = T, xlab = 'cylinders', ylab = 'MPG')
hist(mpg)
hist(mpg, col = 2)
hist(mpg, col = 2, breaks = 15)
pairs(Auto)
pairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
summary(Auto)
summary(mpg)
ISLR
ISLR::College
college = ISLR::College
fix(college)
rownames(college)
college[,1]
rownames(college) = college[,1]
college
fix(college)
X11
pwd
library(MASS)
Boston
?Boston
pair(Boston)
pairs(Boston)
plot(crim, zn)
attach(Boston)
plot(crim, zn)
plot(crim, indus)
plot(crim, rm)
plot(crim, age)
plot(crim, dis)
plot(crim, tax)
plot(crim, ptratio)
plot(crim, black)
plot(crim, lstat)
cor(Boston)
Boston
par(mfrow=c(1,3))
hist(Boston$crim[Boston$crim>1], breaks=25)
?par
hist(Boston$tax, breaks=25)
hist(Boston$tax, breaks=25)
hist(Boston$tax, breaks=25)
hist(Boston$ptratio, breaks=25)
?subset
subset(Boston, chas == 1)
dims(subset(Boston, chas == 1))
dim(subset(Boston, chas == 1))
median(ptratio)
?Boston
min(medv)
?t
subset(Boston, medv == min(medv))
t(subset(Boston, medv == min(medv)))
summary(Boston)
subset(Boston, rm >= 7)
dim(subset(Boston, rm >= 7))
dim(subset(Boston, rm > 7))
dim(subset(Boston, rm > 8))
summary(subset(Boston, rm > 8))
?read.xlsx
??read.xlsx
library(xlsx)
install.packages("xlsx")
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "callr", "caret", "caTools", "cli", "clipr", "cluster", "curl", "data.table", "DBI", "digest", "evaluate", "fansi", "foreach", "foreign", "formatR", "fs", "glmnet", "gower", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "knitr", "later", "lava", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "mongolite", "nlme", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "plyr", "prettyunits", "processx", "prodlim", "profvis", "progress", "promises", "quantmod", "R6", "Rcpp", "RCurl", "recipes", "repr", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "scales", "selectr", "shiny", "sparklyr", "SQUAREM", "stringi", "survival", "sys", "tidyr", "tidyverse", "tinytex", "TTR", "vctrs", "whisker", "xfun", "xts", "zoo"))
# set up the working director
setwd("/Users/Jake/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression")
# set up the working director
setwd("/Users/Jake/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression")
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R', echo=TRUE)
rocket <- read.xlsx("Rocket_Prop.xls",1)
pwd
rocket <- read.xlsx("Rocket_Prop.xls",1)
rocket <- read.xlsx("Rocket_Prop.xls",1)
rocket
plot(strength ~ age, data=rocket)
rocket.lm <- lm(strength ~ age, data=rocket)
rocket.lm
# add a regression line to the plot
abline(rocket.lm)
?abline
rocket.lm
coefficients(rocket.lm)
coeffs <- coefficients(rocket.lm)
coeffs
summary(rocket.lm)
roc.data <- data.frame(rocket, fitted.value=fitted(rocket.lm), residual=resid(rocket.lm))
roc.data
# anova (analysis of variance)
anova(rocket.lm)
data
data.frame(age = 16)
data.frame()
# when age=16
newdata <- data.frame(age=16)
newdata
#confidence interval of mean responce
predict(rocket.lm, newdata, interval="confidence", level=0.95)
#prediction interval
predict(rocket.lm, newdata, interval="prediction")
library(xlsx)
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 - \
AppliedLinearModels-Regression/data-ex-2-1_(Rocket_Prop).xls')
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 -
AppliedLinearModels-Regression/data-ex-2-1_(Rocket_Prop).xls')
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 -
AppliedLinearModels-Regression/data-ex-2-1_(Rocket_Prop).xls')
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 - '\
'AppliedLinearModels-Regression/data-ex-2-1_(Rocket_Prop).xls')
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 - '\
+ 'AppliedLinearModels-Regression/data-ex-2-1_(Rocket_Prop).xls')
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
nfl
nfl
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/',
'data-ex-2-1_(Rocket_Prop).xls', sep = ''))
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/',
'data-ex-2-1_(Rocket_Prop).xls', sep = ''), 1)
nfl
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/',
'data-table-B1.xls', sep = ''), 1)
library(xlsx)
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/',
'data-table-B1.xls', sep = ''), 1)
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/',
'data-table-B1.XLS', sep = ''), 1)
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/',
'data-table-B1.xls', sep = ''), 1)
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/data-table-B1.xls', 1)
nfl <- read.xlsx('/Users/Jake/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/data-table-B1.xlsx', 1)
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - '
'AppliedLinearModels-Regression/data-table-B1.xlsx', 1))
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - '
'AppliedLinearModels-Regression/data-table-B1.xlsx',
sep = ''), 1)
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/data-table-B1.xlsx',
sep = ''), 1)
nfl
typeof(nfl)
# Plot games won (y) vs yards gained rushing by opponents (x8)
plot(y ~ x8, data = nfl)
# Create linear model
nfl.lm <- lm(y ~ x8, data = nfl)
# Create linear model
nfl.lm <- lm(y ~ x8, data = nfl)
nfl.lm
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
# Print coefficients
coeffs <- coefficients(nfl.lm)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
# ANOVA table
anova(nfl.lm)
# Create linear model
nfl.lm <- lm(y ~ x8, data = nfl)
# Print coefficients
coeffs <- coefficients(nfl.lm)
coeffs
print('hello world')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
### Problem 2.1.a ###
print('--- Problem 2.1.a ---')
### Problem 2.1.a ###
print('--- Problem 2.1.a ---')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R', echo=TRUE)
summary(nfl.lm)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
t.test(x8, y)
nfl.x8
nfl
nfl[x8]
t.test(nfl.lm)
coeff
coeffs
t.test(coeffs)
typeof(nfl)
columns(nfl)
t.test(x8, y, data = nfl)
nfl[c(x8)]
nfl[c('x8')]
t.test(nfl[c('x8')], nfl[c('x9')])
t.test(nfl[c('x8')], nfl[c('y')])
nfl['x8']
t.test(nfl['y'] ~ nfl['x8'])
nfl['y']
nfl[c('y')]
t.test(nfl[c('y')] ~ nfl['x8'])
t.test(nfl['y'], nfl['x8'])
summary(nfl)
nfl
?qt
qt(1-0.05/2, 26)
shape(nfl)
dim(nfl)
dim(nfl)[0]
dim(nfl)[1]
test <- dim(nfl[1]) - 2
test
test
dim(test)
test[0]
test[1]
dim(nfl)[1]
dim(nfl[1])
t <- dim(nfl)[1] - 2
t
t = qt(1 - alpha/2, nu)
### Problem 2.1.c - slope 95% CI ###
alpha <- 0.05
nu <- dim(nfl)[1] - 2
t = qt(1 - alpha/2, nu)
t
coeffs
coefficients()
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R', echo=TRUE)
coefficients(nfl)
coefficients(nfl.lm)
summary(rocket.lm)
roc.data
anova(rocket.lm)
# set up the working director
setwd("/Users/Jake/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression")
# read in your data
library(xlsx)
rocket <- read.xlsx("Rocket_Prop.xls",1)
rocket
# scatter plot
plot(strength ~ age, data=rocket)
rocket.lm <- lm(strength ~ age, data=rocket)
rocket.lm
# add a regression line to the plot
abline(rocket.lm)
#coefficents
coeffs <- coefficients(rocket.lm)
coeffs
#summory of rocket.lm
summary(rocket.lm)
summary(nfl.lm)
summary(nfl.lm)
summary(nfl.lm)['Std. Error']
summary(nfl.lm)$coefficients
summary(nfl.lm)$coefficients[6]
summary(nfl.lm)$coefficients[4]
t
summary(nfl.lm)$coefficients[2]
coeffs
# Assign coefficients
coeffs <- coefficients(nfl.lm)
coeffs
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
ci_low
ci_high
slope
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
slope
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
ci_high
slope
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
slope
summary(nfl.lm)$coefficents[2]
nfl
nfl.lm
summary(nfl.lm)
summary(nfl.lm)$coefficients
summary(nfl.lm)$coefficients[2]
alpha
test <- summary(nfl.lm)$coefficients[2]
tes
test
slope <- summary(nfl.lm)$coefficents[2]
slope
# Load packages
library(xlsx)
# Load data
nfl <- read.xlsx(paste('/Users/Jake/Google Drive/RIT/STAT.641 - ',
'AppliedLinearModels-Regression/data-table-B1.xlsx',
sep = ''), 1)
# Create linear model
nfl.lm <- lm(y ~ x8, data = nfl)
# Plot games won (y) vs yards gained rushing by opponents (x8), add line
plot(y ~ x8, data = nfl)
abline(nfl.lm)
# Assign coefficients
coeffs <- coefficients(nfl.lm)
### Problem 2.1.a - LR model ###
cat('--- Problem 2.1.a ---\n')
cat(coeffs)
### Problem 2.1.b - ANOVA ###
cat('\n\n--- Problem 2.1.b ---\n')
print(anova(nfl.lm))
### Problem 2.1.c - slope 95% CI ###
alpha <- 0.05
nu <- dim(nfl)[1] - 2
t <- qt(1 - alpha/2, nu)
t
slope <- summary(nfl.lm)$coefficents[2]
slope
summary(nfl.lm)$coefficents[2]
summary(nfl.lm)
summary(nfl.lm)$coefficents[2]
nfl.lm
summary(nfl.lm)$coefficents[2]
summary(nfl.lm)
summary(nfl.lm)$coefficents[2]
summary(nfl.lm)$coefficents
nfl.lm
# Create linear model
nfl.lm <- lm(y ~ x8, data = nfl)
summary(nfl.lm)$coefficents
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
print(anova(nfl.lm))
summary(nfl.lm)
summary(nfl.lm)$coefficents[2]
summary(nfl.lm)
summary(nfl.lm)$coefficients
summary(nfl.lm)$coefficients[2]
summary(nfl.lm)$coefficients[2]
summary(nfl.lm)$coefficients[2]
test <- summary(nfl.lm)$coefficients[2]
test
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
t
slope
nu
summary(nfl.lm)$coefficents[2]
summary(nfl.lm)
summary(nfl.lm)$coefficents
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
slope
t
slope_se
summary(nfl.lm)$coefficients[4]
summary(nfl.lm)$coefficents[2]
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
ci_high
ci_low
cat(ci_high)
cat(ci_high, 'test')
ci_low
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Rocket.R', echo=TRUE)
summary(nfl.lm)
summary(nfl.lm).r.squared
summary(nfl.lm)$r.squared
cat(100 * summary(nfl.lm)$r.squared, '%')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R', echo=TRUE)
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
predict(nfl.lm, yards, interval = 'confidence', level = 0.95)
predict(nfl.lm, yards, interval = 'confidence', level = 0.95)[0]
predict(nfl.lm, yards, interval = 'confidence', level = 0.95)$
predict(nfl.lm, yards, interval = 'confidence', level = 0.95)$columns
columns(predict(nfl.lm, yards, interval = 'confidence', level = 0.95))
predict(nfl.lm, yards, interval = 'confidence', level = 0.95)[1]
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
source('~/Google Drive/RIT/STAT.641 - AppliedLinearModels-Regression/Ch 2 - Problem 1.R')
