# Education file used:
# https://www.kaggle.com/mylesoneill/world-university-rankings#education_expenditure_supplementary_data.csv

# Make relevant directories
mkdir Temp_Files
mkdir Cleaned_Data
mkdir Combined_Files

# Convert all CSV files to TSV and save in Temp_Files
csv2tsv Raw_Data/education_expenditure_supplementary_data.csv > Temp_Files/tsv_Education.tsv
csv2tsv Raw_Data/MortalityFertilityIncome.csv > Temp_Files/tsv_MortFertInc.tsv
csv2tsv Raw_Data/globalterrorismdb_0718dist.csv > Temp_Files/tsv_Terrorism.tsv

# Education: check for consistency in entries, note extra space in "All Institutions "
echo "Check for typos:"
tsv-summarize --header --group-by 2 --count Temp_Files/tsv_Education.tsv
tsv-summarize --header --group-by 3 --count Temp_Files/tsv_Education.tsv

# Education: only take Public, All Institutions, after 2000
tsv-filter --header --str-eq 2:"All Institutions " --str-eq 3:"Public" < Temp_Files/tsv_Education.tsv | cut -f 1,5-11 > Cleaned_Data/Education.tsv

# M/F/I: Swap commas for periods, remove m/f/i prefix from date column titles
sed -E "s/,/./g" < Temp_Files/tsv_MortFertInc.tsv | sed -E "1 s/(m|f|i)1/1/g" | sed -E "1 s/(m|f|i)2/2/g" > Temp_Files/tsv_MFI_Fixed_Dates.tsv

# M/F/I: Separate into Mortality, Fertility, Income files, after 2000
cut -f 1,34-50 Temp_Files/tsv_MFI_Fixed_Dates.tsv > Cleaned_Data/Mortality.tsv
cut -f 1,81-97 Temp_Files/tsv_MFI_Fixed_Dates.tsv > Cleaned_Data/Fertility.tsv
cut -f 1,128-144 Temp_Files/tsv_MFI_Fixed_Dates.tsv > Cleaned_Data/Income.tsv

# Terrorism: take columns iyear, country_txt, success. Move country_txt to first column
tsv-filter --header --str-eq 27:1 < Temp_Files/tsv_Terrorism.tsv | tsv-select -f 9,2,27 > Temp_Files/tsv_TerrorSimple.tsv

# Terrorism: group by country, incidences per year, for years after 2000
tsv-summarize --header --group-by 1,2 --count < Temp_Files/tsv_TerrorSimple.tsv | tsv-filter --header --ge 2:2000 > Temp_Files/TerrorCut.tsv

# Terrorism: create countries and years arrays, tail portion takes everything but header
countries=( $(tsv-summarize --header --unique-values 1 < Temp_Files/TerrorCut.tsv | tail -n +2) )
years=( $(tsv-summarize --header --unique-values 2 < Temp_Files/TerrorCut.tsv | tail -n +2) )

# Terrorism: search TerrorCut.tsv for country/year combination and add to file
IFS="|"
mkfile b Temp_Files/TerrorSpace.tsv
echo "Country ${years[@]}" | sed "s/|/ /g" >> Temp_Files/TerrorSpace.tsv
echo --- Compiling ---
for country in `echo "${countries[@]}"`; do
	terror_counts=("$country")
	for year in `echo "${years[@]}"`; do
		if [ -n "$(tsv-filter --str-eq 1:"$country" --str-eq 2:"$year" < Temp_Files/TerrorCut.tsv)" ]; then
			# echo "$year" "$country" --Not-- Empty
			terror_counts+=( $( tsv-filter --str-eq 1:"${country}" --str-eq 2:"${year}" < Temp_Files/TerrorCut.tsv | cut -f 3) )
		else
			# echo "$year $country Empty"
			terror_counts+=(0)
		fi
	done
	echo ${terror_counts[*]} >> Temp_Files/TerrorSpace.tsv
done
IFS=" "

# Terrorism: replace spaces with tabs
sed -E "s/ [0-9]/	&/g" < Temp_Files/TerrorSpace.tsv > Cleaned_Data/Terrorism.tsv

# Print available TSV files to compare
echo "Files available: "
IFS="/"
file_array=()
file_names=()
for file in $ls ./Cleaned_Data/*; do
	read -ra name <<< "$file"
	spl_name=${name[${#name[@]}-1]}
	file_array+=($spl_name)
	file_name=[${spl_name:0:1}]${spl_name:1:${#spl_name}-5}
	file_names+=($file_name)
done
echo ${file_names[@]} [D]one
IFS=" "

# First file to compare
read -p "Which file would you like to use as base? " file_1

# Remove requested file from file_names
if [ "$file_1" = "D" ]; then
	file_1=
	echo "Exiting"
else
	for file in "${!file_names[@]}"; do
		if [ "${file_names[file]:1:1}" = "$file_1" ]; then
			unset "file_names[file]"
			file_1=${file_array[file]}
		fi
	done

	# Second file to compare
	echo "Files available: "
	echo ${file_names[@]} [D]one

	read -p "Which file would you like to compare? " file_2
	if [ "$file_2" == "D" ]; then
		file_2=
		echo "Done"
	else
		for file in "${!file_names[@]}"; do
			if [ "${file_names[file]:1:1}" = "$file_2" ]; then
				unset "file_names[file]"
				file_2=${file_array[file]}
			fi
		done

		# Third file to compare
		echo "Files available: "
		echo ${file_names[@]} [D]one

		read -p "Would you like to compare a third file? " file_3
		if [ "$file_3" == "D" ]; then
			file_3=
			echo "Done"
		else
			for file in "${!file_names[@]}"; do
				if [ "${file_names[file]:1:1}" = "$file_3" ]; then
					unset "file_names[file]"
				file_3=${file_array[file]}
				fi
			done
		fi
	fi
fi

# File name depends on how many files user would like joined
if [ -n "$file_3" ]; then
	file_name="${file_2:0:3}_${file_1:0:3}_${file_3:0:3}"
	tsv-join -z --filter-file ./Cleaned_Data/${file_2} --header --key-fields 1 Cleaned_Data/${file_1} Cleaned_Data/${file_3} > Combined_Files/"$file_name".tsv
elif [ -n "$file_2" ]; then
	file_name="${file_2:0:3}_${file_1:0:3}"
	tsv-join -z --filter-file ./Cleaned_Data/${file_2} --header --key-fields 1 Cleaned_Data/${file_1} > Combined_Files/"$file_name".tsv
else
	echo "No files selected to join"
fi

# Remove created directors
rm -iR Temp_Files
rm -iR Cleaned_Data
rm -iR Combined_Files